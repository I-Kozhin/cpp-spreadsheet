#pragma once

#include "common.h"

#include <memory>
#include <vector>

// Интерфейс, определяющий поведение вычисляемой формулы.
// Поддерживаются следующие типы формул:
// * Простые арифметические выражения, например: 1+2*3, 2.5*(2+3.5/7)
// * Использование ячеек и их адресация: A1+B2*C3
// Важно, чтобы формула, передаваемая в Evaluate(), была корректной и не содержала ошибок.
// В противном случае, может произойти исключение или неожиданный результат вычислений.
class FormulaInterface {
    public:
        using Value = std::variant<double, FormulaError>;

        virtual ~FormulaInterface() = default;

        // Вычисляет значение формулы, используя данные из переданного листа.
        // Реализации данного метода должны поддерживать вычисления с учетом ссылок на ячейки.
        // Если вычисления невозможны в текущем контексте, должно быть возвращено соответствующее значение ошибки.
        virtual Value Evaluate(const SheetInterface& sheet) const = 0;

        // Возвращает строковое представление выражения формулы.
        // Предполагается, что результатом будет оригинальное выражение, которое было передано при создании формулы.
        virtual std::string GetExpression() const = 0;

        // Возвращает список позиций ячеек, на которые ссылается формула.
        // Необходим для определения зависимостей между ячейками.
        virtual std::vector<Position> GetReferencedCells() const = 0;
};

// Функция для разбора формулы и создания объекта, реализующего интерфейс FormulaInterface.
// Может генерировать исключение FormulaException, если формула содержит синтаксические ошибки.
std::unique_ptr<FormulaInterface> ParseFormula(std::string expression);
